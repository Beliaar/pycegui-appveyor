# Build worker image (VM template)
image: Visual Studio 2015 Update 2

clone_depth: 5

version: '{build}'

platform:
  - x86

configuration:
  - Release
  #- Debug

environment:
  MSBUILD_FLAGS: /verbosity:minimal /maxcpucount
  downloadLocation: "c:\\libraries"
  matrix:
    # VS 14 + Py2.7
    - generator: "Visual Studio 14"  
      PYTHON: "C:\\Python27"
      PYTHON_VERSION: "2.7"
    # VS 14 + Py3.4
    - generator: "Visual Studio 14"  
      PYTHON: "C:\\Python34"
      PYTHON_VERSION: "3.4"  
    # VS 14 + Py3.5
    - generator: "Visual Studio 14"  
      PYTHON: "C:\\Python35"
      PYTHON_VERSION: "3.5"  

matrix:
  fast_finish: true


# scripts that are called at very beginning, before repo cloning
init:
  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
  - date /T & time /T
  - git config --global core.autocrlf input
  - cmake --version
  # go to hell Xamarin (see http://help.appveyor.com/discussions/problems/4569)
  - del "C:\Program Files (x86)\MSBuild\14.0\Microsoft.Common.targets\ImportAfter\Xamarin.Common.targets"
  # Set "build version number" to "short-commit-hash" or when tagged to "tag name" (Travis style)
  - ps: >-
      if ($env:APPVEYOR_REPO_TAG -eq "true")
      {
        Update-AppveyorBuild -Version "$env:APPVEYOR_REPO_TAG_NAME"
      }
      else
      {
        Update-AppveyorBuild -Version "dev-$($env:APPVEYOR_REPO_COMMIT.substring(0,7))"
      }
  # There are multiple pre-installed versions of Python on Appveyor  
  # see https://www.appveyor.com/docs/installed-software/#python
  - echo %PYTHON% %PYTHON_VERSION%
  - "SET PATH=%PYTHON%;%PYTHON%\\bin;%PYTHON%\\Scripts;%PATH%"
  # Show version and architecture for Python
  - "%PYTHON%\\python.exe --version"
  - "%PYTHON%\\python.exe -c \"import struct; print(struct.calcsize('P') * 8)\""

install:
  # get dependencies
  - ps: ./dl_extract_boost_python.ps1 $env:PYTHON_VERSION
  - ps: ./dl_extract_cegui-sdk.ps1
  
#before_build:
  # git sh.exe conflicts with MinGW makefiles
  #- if "%generator%"=="MinGW Makefiles" (set "PATH=%PATH:C:\Program Files\Git\usr\bin;=%")

build_script:
  - dir
  - ps: ./dl_extract_cegui_src.ps1
  - mkdir build
  - cd build
  # generate build script
  - >
    cmake ..
    -G "%generator%" 
    -DCMAKE_BUILD_TYPE=%configuration% 
    -DCMAKE_INSTALL_PREFIX="../PyCEGUI"
    -DCEGUI_BUILD_RENDERER_OPENGL="On"
  # build
  - cmake --build . --target ALL_BUILD --config %configuration% -- /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"
  # install
  - cmake --build . --target INSTALL --config %configuration%

after_build:
  - cd ..
  # package pycegui artifact
  - ps: ."$env:PYTHON\python.exe" setup.py bdist_wininst --target-version="$env:PYTHON_VERSION"
  - ps: Get-ChildItem .\dist\PyCEGUI-*.exe | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name -DeploymentName pyCEGUI}


on_finish:
  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
